local DrRayLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/DrRay.lua"))()

local window = DrRayLibrary:Load("Rinns Hub", "Default")

local aimlockEnabled = false
local autoFarmMurderersEnabled = false
local autoFarmSheriffsEnabled = false
local espEnabled = false
local teleportToSafeSpotEnabled = false
local targetPlayer = nil
local espConnections = {}
local originalPosition = nil

local SheriffTeam = "Sheriffs"    -- The name of the Sheriffs team
local MurderersTeam = "Murderers"  -- The name of the Murderers team

local function isEnemy(player, target)
    if player.Team and target.Team then
        return (player.Team.Name == SheriffTeam and target.Team.Name == MurderersTeam) or 
               (player.Team.Name == MurderersTeam and target.Team.Name == SheriffTeam)
    end
    return false
end

local function isAlive(player)
    local character = player.Character
    if character then
        local humanoid = character:FindFirstChild("Humanoid")
        if humanoid and humanoid.Health > 0 then
            return true
        end
    end
    return false
end

local function findNearestFacingEnemy(player)
    local Players = game:GetService("Players")
    local nearestDistance = math.huge
    local nearestPlayer = nil
    local camera = game.Workspace.CurrentCamera

    for _, target in ipairs(Players:GetPlayers()) do
        if target ~= player and isEnemy(player, target) and isAlive(target) then
            local distance = (player.Character.HumanoidRootPart.Position - target.Character.HumanoidRootPart.Position).Magnitude
            local direction = (target.Character.HumanoidRootPart.Position - camera.CFrame.Position).Unit
            local angle = math.acos(camera.CFrame.LookVector:Dot(direction))
            if distance < nearestDistance and angle < math.rad(30) then  -- 30 degree cone in front of the player
                nearestDistance = distance
                nearestPlayer = target
            end
        end
    end

    return nearestPlayer
end

local function findNearestEnemy(player)
    local Players = game:GetService("Players")
    local nearestDistance = math.huge
    local nearestPlayer = nil

    for _, target in ipairs(Players:GetPlayers()) do
        if target ~= player and isEnemy(player, target) and isAlive(target) then
            local distance = (player.Character.HumanoidRootPart.Position - target.Character.HumanoidRootPart.Position).Magnitude
            if distance < nearestDistance then
                nearestDistance = distance
                nearestPlayer = target
            end
        end
    end

    return nearestPlayer
end

local function aimAtTarget(player, targetPlayer)
    local camera = game:GetService("Workspace").CurrentCamera
    local targetPart = targetPlayer.Character:FindFirstChild("Head") or targetPlayer.Character:FindFirstChild("HumanoidRootPart")
    if targetPart then
        camera.CFrame = CFrame.new(camera.CFrame.Position, targetPart.Position)
    end
end

local function teleportBehindTarget(player, targetPlayer)
    local targetPosition = targetPlayer.Character.HumanoidRootPart.Position
    local behindPosition = targetPosition - (targetPlayer.Character.HumanoidRootPart.CFrame.LookVector * 3) -- 3 studs behind the target
    behindPosition = behindPosition + Vector3.new(0, 2, 0) -- Adjust height to avoid clipping into the ground
    player.Character.HumanoidRootPart.CFrame = CFrame.new(behindPosition)
end

local function startAimlock()
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer

    -- Main aimlock loop
    while aimlockEnabled do
        if player.Character and isAlive(player) then
            local newTargetPlayer = findNearestFacingEnemy(player)
            if newTargetPlayer and newTargetPlayer ~= targetPlayer then
                targetPlayer = newTargetPlayer
            end

            if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                aimAtTarget(player, targetPlayer)
            end
        end
        wait(0.01)  -- Minimal delay for more precision
    end
end

local function startAutoFarmMurderers()
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer

    -- Main auto farm loop
    while autoFarmMurderersEnabled do
        if player.Character and isAlive(player) then
            if not targetPlayer or not isAlive(targetPlayer) then
                targetPlayer = findNearestEnemy(player)
            end

            if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                teleportBehindTarget(player, targetPlayer)
                
                local args = {
                    [1] = targetPlayer.Character.HumanoidRootPart,
                    [2] = "Slash"
                }
                game:GetService("Players").LocalPlayer.Character.Knife.Damage:FireServer(unpack(args))
            end
        end
        wait(0.1)  -- Adjust delay as needed
    end
end

local function startAutoFarmSheriffs()
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer

    -- Main auto farm loop
    while autoFarmSheriffsEnabled do
        if player.Character and isAlive(player) then
            if not targetPlayer or not isAlive(targetPlayer) then
                targetPlayer = findNearestEnemy(player)
            end

            if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
                teleportBehindTarget(player, targetPlayer)
                
                local args = {
                    [1] = targetPlayer.Character.RightHand,
                    [2] = Vector3.new(13.421182632446289, 114.77058410644531, 14.178533554077148),
                    [3] = Vector3.new(13.445096969604492, 115.99995422363281, 5.678727626800537)
                }
                game:GetService("Players").LocalPlayer.Character.Gun.Damage:FireServer(unpack(args))
            end
        end
        wait(0.1)  -- Adjust delay as needed
    end
end

local function startESP()
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer

    local function highlightPlayer(target)
        local Character = target.Character or target.CharacterAdded:Wait()
        local Humanoid = Character:WaitForChild("Humanoid")
        local Highlighter = Instance.new("Highlight", Character)
        Highlighter.FillColor = (target.TeamColor and target.TeamColor.Color) or Color3.fromRGB(255, 48, 51)
        
        table.insert(espConnections, Humanoid.Changed:Connect(function()
            if Humanoid.Health <= 0 then
                Highlighter:Destroy()
            end
        end))
    end

    local function highlightFunc(target)
        if target.Character then
            highlightPlayer(target)
        end
        table.insert(espConnections, target.CharacterAdded:Connect(function()
            highlightPlayer(target)
        end))
    end

    for _, target in ipairs(Players:GetPlayers()) do
        if target ~= player then
            highlightFunc(target)
        end
    end

    table.insert(espConnections, Players.PlayerAdded:Connect(function(target)
        highlightFunc(target)
    end))
end

local function stopESP()
    for _, connection in ipairs(espConnections) do
        connection:Disconnect()
    end
    espConnections = {}
end

local function teleportToSafeSpot(toggleState)
    local player = game:GetService("Players").LocalPlayer
    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
        if toggleState then
            originalPosition = player.Character.HumanoidRootPart.CFrame
            player.Character.HumanoidRootPart.CFrame = CFrame.new(4995.77490234375, -36.5000114440918, -18.143943786621094)
        else
            if originalPosition then
                player.Character.HumanoidRootPart.CFrame = originalPosition
                originalPosition = nil
            end
        end
    end
end

local function rejoinServer()
    local TeleportService = game:GetService("TeleportService")
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer

    TeleportService:TeleportToPlaceInstance(game.PlaceId, game.JobId, player)
end

local function serverHop()
    local HttpService = game:GetService("HttpService")
    local TeleportService = game:GetService("TeleportService")
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer

    local servers = HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100")).data

    for _, server in ipairs(servers) do
        if server.playing < server.maxPlayers and server.id ~= game.JobId then
            TeleportService:TeleportToPlaceInstance(game.PlaceId, server.id, player)
            break
        end
    end
end

local function serverHopLowPlayers()
    local HttpService = game:GetService("HttpService")
    local TeleportService = game:GetService("TeleportService")
    local Players = game:GetService("Players")
    local player = Players.LocalPlayer

    local servers = HttpService:JSONDecode(game:HttpGet("https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Asc&limit=100")).data

    table.sort(servers, function(a, b) return a.playing < b.playing end)

    for _, server in ipairs(servers) do
        if server.playing < server.maxPlayers and server.id ~= game.JobId then
            TeleportService:TeleportToPlaceInstance(game.PlaceId, server.id, player)
            break
        end
    end
end

local tab = DrRayLibrary.newTab("Main Tab", "ImageIdHere")

tab.newToggle("Aimlock", "Allows you to lock onto players on the opposite team", false, function(toggleState)
    aimlockEnabled = toggleState
    if toggleState then
        print("Aimlock On")
        coroutine.wrap(startAimlock)()
    else
        print("Aimlock Off")
        targetPlayer = nil
    end
end)

tab.newToggle("Auto Farm For Murderers (Faster)", "Automatically teleports behind players on the opposite team. Make sure you are in the Murderers team and have your knife equipped.", false, function(toggleState)
    autoFarmMurderersEnabled = toggleState
    if toggleState then
        print("Auto Farm For Murderers (Faster) On")
        coroutine.wrap(startAutoFarmMurderers)()
    else
        print("Auto Farm For Murderers (Faster) Off")
        targetPlayer = nil
    end
end)

tab.newToggle("Auto Farm For Sheriffs (Slower)", "Automatically teleports behind players on the Murderers team and attacks with a gun. Make sure you are in the Sheriffs team and have your gun equipped.", false, function(toggleState)
    autoFarmSheriffsEnabled = toggleState
    if toggleState then
        print("Auto Farm For Sheriffs (Slower) On")
        coroutine.wrap(startAutoFarmSheriffs)()
    else
        print("Auto Farm For Sheriffs (Slower) Off")
        targetPlayer = nil
    end
end)

local visualsTab = DrRayLibrary.newTab("Visuals", "ImageIdHere")

visualsTab.newButton("Highlights", "Highlights every player. Blue is sheriff, red is murderer.", function()
    if espEnabled then
        stopESP()
    else
        startESP()
    end
    espEnabled = not espEnabled
end)

local teleportsTab = DrRayLibrary.newTab("Teleports", "ImageIdHere")

teleportsTab.newToggle("Teleport to Safe Spot", "Teleports you to a safe spot", false, function(toggleState)
    teleportToSafeSpot(toggleState)
end)

local serversTab = DrRayLibrary.newTab("Servers", "ImageIdHere")

serversTab.newButton("Rejoin Server", "Rejoin the current server if you get kicked", function()
    rejoinServer()
end)

serversTab.newButton("Server Hop", "Join a random server", function()
    serverHop()
end)

serversTab.newButton("Server Hop Low Players", "Join the server with the lowest number of players", function()
    serverHopLowPlayers()
end)

local NotificationHolder = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()

Notification:Notify(
    {Title = "Thanks For using Rinns Hub", Description = "Thank you for using Rinns Hub join the discord to report any bugs gives suggestion, etc https://discord.com/invite/rCRPBsxYAa"},
    {OutlineColor = Color3.fromRGB(80, 80, 80), Time = 5, Type = "option"},
    {Image = "http://www.roblox.com/asset/?id=6023426923", ImageColor = Color3.fromRGB(255, 84, 84), Callback = function(State) print(tostring(State)) end}
)

-- Highlight function for existing and new players
local function highlightFunc(target)
    local function highlightPlayer(target)
        local Character = target.Character or target.CharacterAdded:Wait()
        local Humanoid = Character:WaitForChild("Humanoid")
        local Highlighter = Instance.new("Highlight", Character)
        Highlighter.FillColor = (target.TeamColor and target.TeamColor.Color) or Color3.fromRGB(255, 48, 51)
        
        table.insert(espConnections, Humanoid.Changed:Connect(function()
            if Humanoid.Health <= 0 then
                Highlighter:Destroy()
            end
        end))
    end

    if target.Character then
        highlightPlayer(target)
    end
    table.insert(espConnections, target.CharacterAdded:Connect(function()
        highlightPlayer(target)
    end))
end

-- Run the highlighting function for existing players
local function highlightExistingPlayers()
    for _, player in ipairs(game:GetService("Players"):GetPlayers()) do
        if player ~= game:GetService("Players").LocalPlayer then
            highlightFunc(player)
        end
    end
end

highlightExistingPlayers()

-- Connect the player added event to the highlighting function
game:GetService("Players").PlayerAdded:Connect(function(player)
    if player ~= game:GetService("Players").LocalPlayer then
        highlightFunc(player)
    end
end)

local NotificationHolder = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()

Notification:Notify(
    {Title = "Thank You for Using Rinns Hub ", Description = "Join The Discord server to report any bugs or give suggestions https://discord.com/invite/x55Rw6PD7x"},
    {OutlineColor = Color3.fromRGB(80, 80, 80),Time = 8, Type = "option"},
    {Image = "http://www.roblox.com/asset/?id=6023426923", ImageColor = Color3.fromRGB(255, 84, 84), Callback = function(State) print(tostring(State)) end}
)

Notification:Notify(
    {Title = "IMPORTANT", Description = "If any of the toggles are already green you have to turn it off by clicking it and turning it back on by clicking it again for the feature to work"},
    {OutlineColor = Color3.fromRGB(80, 80, 80),Time = 8, Type = "option"},
    {Image = "http://www.roblox.com/asset/?id=6023426923", ImageColor = Color3.fromRGB(255, 84, 84), Callback = function(State) print(tostring(State)) end}
)
